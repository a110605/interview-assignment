"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WebTerminal = void 0;
var _objectDestructuringEmpty2 = _interopRequireDefault(require("@babel/runtime/helpers/objectDestructuringEmpty"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _classnames = _interopRequireDefault(require("classnames"));
var _settings = require("../../settings");
var _icons = require("@carbon/react/icons");
var _react2 = require("@carbon/react");
var _motion = require("@carbon/motion");
var _hooks = require("./hooks");
var _devtools = require("../../global/js/utils/devtools");
var _excluded = ["actions", "children", "className", "closeIconDescription", "documentationLinks", "documentationLinksIconDescription", "isInitiallyOpen"];
/**
 * Copyright IBM Corp. 2020, 2022
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
// Import portions of React that are needed.
// Other standard imports.
// Carbon and package components we use.
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
// The block part of our conventional BEM class names (blockClass__E--M).
var componentName = 'WebTerminal';
var blockClass = "".concat(_settings.pkg.prefix, "--web-terminal");

// Default values for props
var defaults = {
  actions: Object.freeze([]),
  documentationLinks: Object.freeze([]),
  documentationLinksIconDescription: 'Show documentation links',
  isInitiallyOpen: false
};

/**
 * The `WebTerminal` is prompted by the user and is persistent until dismissed. The purpose of a web terminal is to provide users with the ability to type commands manually instead of using the GUI.
 */
var WebTerminal = /*#__PURE__*/_react.default.forwardRef(function (_ref, ref) {
  var _ref3;
  var _ref$actions = _ref.actions,
    actions = _ref$actions === void 0 ? defaults.actions : _ref$actions,
    children = _ref.children,
    className = _ref.className,
    closeIconDescription = _ref.closeIconDescription,
    _ref$documentationLin = _ref.documentationLinks,
    documentationLinks = _ref$documentationLin === void 0 ? defaults.documentationLinks : _ref$documentationLin,
    _ref$documentationLin2 = _ref.documentationLinksIconDescription,
    documentationLinksIconDescription = _ref$documentationLin2 === void 0 ? defaults.documentationLinksIconDescription : _ref$documentationLin2,
    _ref$isInitiallyOpen = _ref.isInitiallyOpen,
    isInitiallyOpen = _ref$isInitiallyOpen === void 0 ? defaults.isInitiallyOpen : _ref$isInitiallyOpen,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var _useWebTerminal = (0, _hooks.useWebTerminal)(),
    open = _useWebTerminal.open,
    closeWebTerminal = _useWebTerminal.closeWebTerminal,
    openWebTerminal = _useWebTerminal.openWebTerminal;
  var _useState = (0, _react.useState)(open),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    shouldRender = _useState2[0],
    setRender = _useState2[1];
  var _ref2 = window && window.matchMedia ? window.matchMedia('(prefers-reduced-motion: reduce)') : {
      matches: true
    },
    prefersReducedMotion = _ref2.matches;
  var webTerminalAnimationName = "".concat(open ? 'web-terminal-entrance' : 'web-terminal-exit', " ").concat(_motion.moderate02);
  var showDocumentationLinks = (0, _react.useMemo)(function () {
    return documentationLinks.length > 0;
  }, [documentationLinks]);
  (0, _react.useEffect)(function () {
    if (open) {
      setRender(true);
    }
  }, [open]);

  /**
    On render, check if user want's the web terminal to be open by default
  */
  (0, _react.useEffect)(function () {
    if (isInitiallyOpen) {
      openWebTerminal();
    }
  }, []); // eslint-disable-line

  /**
    When the web terminal slide in animation is complete, sets render to false.
  */
  var onAnimationEnd = function onAnimationEnd() {
    if (!open) {
      setRender(false);
    }
  };
  var handleCloseTerminal = function handleCloseTerminal() {
    /**
      If the user prefers reduced motion, we have to manually set render to false
      because onAnimationEnd will never be called.
    */
    if (prefersReducedMotion) {
      setRender(false);
    }
    closeWebTerminal();
  };
  return shouldRender ? /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({}, _objectSpread(_objectSpread({}, rest), (0, _devtools.getDevtoolsProps)(componentName)), {
    ref: ref,
    className: (0, _classnames.default)([blockClass, className, (_ref3 = {}, (0, _defineProperty2.default)(_ref3, "".concat(blockClass, "--open"), open), (0, _defineProperty2.default)(_ref3, "".concat(blockClass, "--closed"), !open), _ref3)]),
    style: {
      animation: !prefersReducedMotion && webTerminalAnimationName
    },
    onAnimationEnd: onAnimationEnd
  }), /*#__PURE__*/_react.default.createElement("header", {
    className: "".concat(blockClass, "__bar")
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(blockClass, "__actions")
  }, showDocumentationLinks && /*#__PURE__*/_react.default.createElement(_react2.OverflowMenu, {
    renderIcon: function renderIcon(props) {
      return /*#__PURE__*/_react.default.createElement(_icons.Help, (0, _extends2.default)({
        size: 16
      }, props));
    },
    iconDescription: documentationLinksIconDescription,
    "aria-label": documentationLinksIconDescription,
    menuOptionsClass: "".concat(blockClass, "__documentation-overflow"),
    size: "lg"
  }, documentationLinks.map(function (_ref4, i) {
    var rest = (0, _extends2.default)({}, ((0, _objectDestructuringEmpty2.default)(_ref4), _ref4));
    return /*#__PURE__*/_react.default.createElement(_react2.OverflowMenuItem, (0, _extends2.default)({
      key: i
    }, rest));
  })), actions.map(function (_ref5) {
    var renderIcon = _ref5.renderIcon,
      onClick = _ref5.onClick,
      iconDescription = _ref5.iconDescription;
    return /*#__PURE__*/_react.default.createElement(_react2.Button, {
      key: iconDescription,
      hasIconOnly: true,
      renderIcon: renderIcon,
      onClick: onClick,
      iconDescription: iconDescription,
      kind: "ghost",
      "aria-label": iconDescription
    });
  })), /*#__PURE__*/_react.default.createElement(_react2.Button, {
    hasIconOnly: true,
    renderIcon: function renderIcon(props) {
      return /*#__PURE__*/_react.default.createElement(_icons.Close, (0, _extends2.default)({
        size: 16
      }, props));
    },
    kind: "ghost",
    iconDescription: closeIconDescription,
    onClick: handleCloseTerminal,
    onAnimationEnd: function onAnimationEnd(event) {
      return event.stopPropagation();
    }
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(blockClass, "__body")
  }, children)) : null;
});

// Return a placeholder if not released and not enabled by feature flag
exports.WebTerminal = WebTerminal;
exports.WebTerminal = WebTerminal = _settings.pkg.checkComponentEnabled(WebTerminal, componentName);

// The display name of the component, used by React. Note that displayName
// is used in preference to relying on function.name.
WebTerminal.displayName = componentName;

// The types and DocGen commentary for the component props,
// in alphabetical order (for consistency).
// See https://www.npmjs.com/package/prop-types#usage.
WebTerminal.propTypes = {
  /**
   * An array of actions to be displayed in the web terminal header bar
   */
  actions: _propTypes.default.arrayOf(_propTypes.default.shape({
    renderIcon: _propTypes.default.func.isRequired,
    onClick: _propTypes.default.func.isRequired,
    iconDescription: _propTypes.default.string.isRequired
  })),
  /**
   * Provide your own terminal component as children to show up in the web terminal
   */
  children: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node]).isRequired,
  /**
   * Custom classname for additional styling of the web terminal
   */
  className: _propTypes.default.string,
  /**
   * Icon description for the close button
   */
  closeIconDescription: _propTypes.default.string.isRequired,
  /**
   * Array of objects for each documentation link. Each documentation link uses the prop types of OverflowMenuItems. See more: https://react.carbondesignsystem.com/?path=/docs/components-overflowmenu--default
   */
  documentationLinks: _propTypes.default.arrayOf(_propTypes.default.shape(_objectSpread({}, _react2.OverflowMenuItem.propTypes))),
  /**
   * Description for the documentation link overflow menu tooltip
   */
  documentationLinksIconDescription: _propTypes.default.string,
  /**
   * Optionally pass if the web terminal should be open by default
   */
  isInitiallyOpen: _propTypes.default.bool
};