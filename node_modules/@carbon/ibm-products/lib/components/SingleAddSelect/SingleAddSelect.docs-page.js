"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _StoryDocsPage = require("../../global/js/utils/StoryDocsPage");
var DocsPage = function DocsPage() {
  return /*#__PURE__*/_react.default.createElement(_StoryDocsPage.StoryDocsPage, {
    altGuidelinesHref: "https://pages.github.ibm.com/cdai-design/pal/patterns/add-and-select/usage",
    blocks: [{
      title: 'Structuring items',
      description: "The `items` object has a lot of customization potential and can greatly effect\nthe way the component is displayed and how you interact with it..\n\nLet's walk through an example.",
      source: {
        code: "items: {\n  entries: [ // the actual list of items / entries\n    {\n      id: '1', // required unique id for the entry\n      value: '1', // required value of the entry\n      title: 'item 1', // required title to display\n      subtitle: 'item 1 subtitle', // subtitle to display\n      children: { // designates if entry has children. if the children prop is found a hierarchy list will be used\n        entries: [\n          {\n            id: '1-1',\n            value: 'file1.pdf',\n            title: 'file1.pdf',\n          },\n        ],\n      },\n    },\n  ],\n}"
      }
    }]
  });
};
var _default = DocsPage;
exports.default = _default;