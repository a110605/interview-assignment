"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _StoryDocsPage = require("../../global/js/utils/StoryDocsPage");
var stories = _interopRequireWildcard(require("./Cascade.stories"));
var _blocks = require("@storybook/blocks");
var _storyHelper = require("../../global/js/utils/story-helper");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var DocsPage = function DocsPage() {
  var _useOf = (0, _blocks.useOf)('meta', ['meta']),
    csfFile = _useOf.csfFile;
  return /*#__PURE__*/_react.default.createElement(_StoryDocsPage.StoryDocsPage, {
    altGuidelinesHref: [(0, _storyHelper.storyDocsGuidelines)(csfFile), {
      href: 'https://www.carbondesignsystem.com/guidelines/motion/overview/',
      label: 'Carbon motion guidelines'
    }],
    blocks: [{
      story: stories.WithoutGrid
    }, {
      description: 'When using `Cascade` with  grid support its important that you follow the example code structure and provide the rows and columns. The component will assume this structure and add the appropriate CSS classes to the columns.',
      story: stories.WithGrid
    }]
  });
};
var _default = DocsPage;
exports.default = _default;