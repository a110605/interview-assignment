"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _icons = require("@carbon/react/icons");
var _settings = require("../../settings");
var _classnames = _interopRequireDefault(require("classnames"));
/* eslint-disable react/prop-types */
/*
 * Licensed Materials - Property of IBM
 * 5724-Q36
 * (c) Copyright IBM Corp. 2020
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 */

var blockClass = "".concat(_settings.pkg.prefix, "--datagrid");
var useRowExpander = function useRowExpander(hooks) {
  var visibleColumns = function visibleColumns(columns) {
    var expanderColumn = {
      id: 'expander',
      Cell: function Cell(_ref) {
        var row = _ref.row;
        return row.canExpand && /*#__PURE__*/_react.default.createElement("button", (0, _extends2.default)({
          type: "button",
          "aria-label": "Expand current row",
          className: (0, _classnames.default)("".concat(blockClass, "__row-expander"), "".concat(_settings.carbon.prefix, "--btn"), "".concat(_settings.carbon.prefix, "--btn--ghost"))
        }, row.getToggleRowExpandedProps()), row.isExpanded ? /*#__PURE__*/_react.default.createElement(_icons.ChevronUp, {
          className: "".concat(blockClass, "__row-expander--icon")
        }) : /*#__PURE__*/_react.default.createElement(_icons.ChevronDown, {
          className: "".concat(blockClass, "__row-expander--icon")
        }));
      },
      width: 48,
      disableResizing: true,
      disableSortBy: true,
      Header: ''
    };
    return [expanderColumn].concat((0, _toConsumableArray2.default)(columns));
  };
  hooks.visibleColumns.push(visibleColumns);
};
var _default = useRowExpander;
exports.default = _default;