"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _debounce = _interopRequireDefault(require("lodash/debounce"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; } /*
icensed Materials - Property of IBM

c) Copyright IBM Corp. 2020
overnment Users Restricted Rights - Use, duplication or disclosure
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * restricted by GSA ADP Schedule Contract with IBM Corp.

var useRowIsMouseOver = function useRowIsMouseOver(hooks) {
  var useInstance = function useInstance(instance) {
    var _useState = (0, _react.useState)(),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      mouseOverRowIndex = _useState2[0],
      setMouseOverRowIndex = _useState2[1];
    var onMouseChange = useDebounce(function (datagridState) {
      var row = datagridState.row;
      setMouseOverRowIndex(row.index);
    }, 100);
    var getRowProps = function getRowProps(props, datagridState) {
      var onMouseOver = function onMouseOver() {
        return onMouseChange(datagridState);
      };
      return [props, {
        onMouseOver: onMouseOver
      }];
    };
    var rows = instance.rows;
    var rowsWithMouseOver = rows.map(function (row) {
      return _objectSpread(_objectSpread({}, row), {}, {
        isMouseOver: row.index === mouseOverRowIndex
      });
    });
    Object.assign(instance, {
      rows: rowsWithMouseOver
    });
    hooks.getRowProps.push(getRowProps);
  };
  hooks.useInstance.push(useInstance);
};
var useDebounce = function useDebounce(fn, wait) {
  return (
    // eslint-disable-next-line react-hooks/exhaustive-deps
    (0, _react.useCallback)((0, _debounce.default)(fn, wait), [])
  );
};
var _default = useRowIsMouseOver;
exports.default = _default;