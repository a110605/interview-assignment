"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _react = require("react");
var _reactTable = require("react-table");
var _uniqueId = _interopRequireDefault(require("lodash/uniqueId"));
var _useSkeletonRows = _interopRequireDefault(require("./useSkeletonRows"));
var _useDefaultStringRenderer = _interopRequireDefault(require("./useDefaultStringRenderer"));
var _useRowRenderer = _interopRequireDefault(require("./useRowRenderer"));
var _useRowSize = _interopRequireDefault(require("./useRowSize"));
var _DatagridHeaderRow = _interopRequireDefault(require("./Datagrid/DatagridHeaderRow"));
var _useFlexResize = _interopRequireDefault(require("./useFlexResize"));
var _useFloatingScroll = _interopRequireDefault(require("./useFloatingScroll"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; } /*
icensed Materials - Property of IBM

c) Copyright IBM Corp. 2020 - 2021
overnment Users Restricted Rights - Use, duplication or disclosure
restricted by GSA ADP Schedule Contract with IBM Corp.

var useDatagrid = function useDatagrid(params) {
  var defaultPlugins = [_reactTable.useFlexLayout, _DatagridHeaderRow.default, _useSkeletonRows.default, _reactTable.useResizeColumns, _useRowRenderer.default, _useDefaultStringRenderer.default, _useRowSize.default, _reactTable.useFilters, _reactTable.useGlobalFilter, _reactTable.useSortBy, _reactTable.useExpanded];
  var defaultEndPlugins = [_reactTable.usePagination, _reactTable.useRowSelect, _useFlexResize.default, _useFloatingScroll.default];
  var clientEndPlugins = params.endPlugins || [];
  var tableId = (0, _react.useMemo)(function () {
    return (0, _uniqueId.default)('datagrid-table-id');
  }, []);
  for (var _len = arguments.length, plugins = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    plugins[_key - 1] = arguments[_key];
  }
  var tableState = _reactTable.useTable.apply(void 0, [_objectSpread({
    tableId: tableId
  }, params)].concat(defaultPlugins, plugins, defaultEndPlugins, (0, _toConsumableArray2.default)(clientEndPlugins)));
  return tableState;
};
var _default = useDatagrid;
exports.default = _default;