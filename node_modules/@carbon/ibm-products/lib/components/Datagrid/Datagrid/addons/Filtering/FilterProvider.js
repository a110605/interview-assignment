"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FilterProvider = exports.FilterContext = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _constants = require("./constants");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/**
 * Copyright IBM Corp. 2022, 2022
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

var FilterContext = /*#__PURE__*/(0, _react.createContext)();
exports.FilterContext = FilterContext;
var EventEmitter = {
  events: {},
  dispatch: function dispatch(event, data) {
    if (!this.events[event]) {
      return;
    }
    this.events[event].forEach(function (callback) {
      return callback(data);
    });
  },
  subscribe: function subscribe(event, callback) {
    if (!this.events[event]) {
      this.events[event] = [];
    } else {
      this.events[event].push(callback);
    }
  }
};
var prepareFiltersForTags = function prepareFiltersForTags(filters) {
  var tags = [];
  filters.forEach(function (_ref) {
    var id = _ref.id,
      type = _ref.type,
      value = _ref.value;
    if (type === _constants.DROPDOWN || type === _constants.RADIO || type === _constants.NUMBER) {
      tags.push({
        key: id,
        value: value
      });
    } else if (type === _constants.DATE) {
      var _value = (0, _slicedToArray2.default)(value, 2),
        startDate = _value[0],
        endDate = _value[1];
      tags.push({
        key: id,
        value: "".concat(startDate.toLocaleDateString(), " - ").concat(endDate.toLocaleDateString())
      });
    } else if (type === _constants.CHECKBOX) {
      value.forEach(function (checkbox) {
        if (checkbox.selected) {
          tags.push({
            key: id,
            value: checkbox.value
          });
        }
      });
    }
  });
  return tags;
};
var FilterProvider = function FilterProvider(_ref2) {
  var children = _ref2.children,
    filters = _ref2.filters;
  var filterTags = prepareFiltersForTags(filters);
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    panelOpen = _useState2[0],
    setPanelOpen = _useState2[1];
  var value = {
    filterTags: filterTags,
    EventEmitter: EventEmitter,
    panelOpen: panelOpen,
    setPanelOpen: setPanelOpen
  };
  return /*#__PURE__*/_react.default.createElement(FilterContext.Provider, {
    value: value
  }, children);
};
exports.FilterProvider = FilterProvider;
FilterProvider.propTypes = {
  children: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node]).isRequired,
  filters: _propTypes.default.arrayOf(_propTypes.default.object).isRequired
};