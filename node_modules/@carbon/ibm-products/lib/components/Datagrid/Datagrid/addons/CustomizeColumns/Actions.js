"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = require("@carbon/react");
var React = _interopRequireWildcard(require("react"));
var _settings = require("../../../../../settings");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/**
 * Copyright IBM Corp. 2022, 2022
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

var blockClass = "".concat(_settings.pkg.prefix, "--datagrid");
var Actions = function Actions(_ref) {
  var searchText = _ref.searchText,
    setSearchText = _ref.setSearchText,
    findColumnPlaceholderLabel = _ref.findColumnPlaceholderLabel;
  return /*#__PURE__*/React.createElement("div", {
    className: "".concat(blockClass, "__customize-columns-tearsheet--actions")
  }, /*#__PURE__*/React.createElement(_react.Search, {
    placeholder: findColumnPlaceholderLabel,
    value: searchText,
    size: "lg",
    labelText: findColumnPlaceholderLabel,
    onChange: function onChange(e) {
      // TODO: is it performant?
      setSearchText(e.target.value);
    }
  }));
};
Actions.propTypes = {
  columns: _propTypes.default.array.isRequired,
  findColumnPlaceholderLabel: _propTypes.default.string,
  originalColumnDefinitions: _propTypes.default.array.isRequired,
  resetToDefaultLabel: _propTypes.default.string,
  searchText: _propTypes.default.string.isRequired,
  setColumnsObject: _propTypes.default.func.isRequired,
  setSearchText: _propTypes.default.func.isRequired
};
var _default = Actions;
exports.default = _default;