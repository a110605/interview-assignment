"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Datagrid = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _classnames = _interopRequireDefault(require("classnames"));
var _devtools = require("../../../global/js/utils/devtools");
var _settings = require("../../../settings");
var _pconsole = _interopRequireDefault(require("../../../global/js/utils/pconsole"));
var _InlineEditContext = require("./addons/InlineEdit/InlineEditContext");
var _DatagridContent = require("./DatagridContent");
var _FilterProvider = require("./addons/Filtering/FilterProvider");
var _excluded = ["datagridState"];
/**
 * Copyright IBM Corp. 2020, 2022
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
var blockClass = "".concat(_settings.pkg.prefix, "--datagrid");
var componentName = 'Datagrid';
var Datagrid = /*#__PURE__*/_react.default.forwardRef(function (_ref, ref) {
  var datagridState = _ref.datagridState,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  if (!datagridState) {
    _pconsole.default.warn('Datagrid was not passed datagridState which is required to render this component.');
    return null;
  }
  var withVirtualScroll = datagridState.withVirtualScroll,
    DatagridPagination = datagridState.DatagridPagination,
    isFetching = datagridState.isFetching,
    tableId = datagridState.tableId,
    filterProps = datagridState.filterProps,
    className = datagridState.className,
    filters = datagridState.state.filters;
  var rows = DatagridPagination && datagridState.page || datagridState.rows;
  return /*#__PURE__*/_react.default.createElement(_FilterProvider.FilterProvider, {
    filters: filters
  }, /*#__PURE__*/_react.default.createElement(_InlineEditContext.InlineEditProvider, null, /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({}, rest, {
    id: tableId,
    ref: ref,
    className: (0, _classnames.default)(className, blockClass, withVirtualScroll ? "".concat(blockClass, "__datagridWrap") : "".concat(blockClass, "__datagridWrap-simple"), !isFetching && rows.length === 0 ? "".concat(blockClass, "__empty-state") : '')
  }, (0, _devtools.getDevtoolsProps)(componentName)), (filterProps === null || filterProps === void 0 ? void 0 : filterProps.variation) === 'panel' ? /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(blockClass, "__datagridWithPanel ").concat(blockClass, "__displayFlex")
  }, /*#__PURE__*/_react.default.createElement(_DatagridContent.DatagridContent, {
    datagridState: datagridState
  })) : /*#__PURE__*/_react.default.createElement(_DatagridContent.DatagridContent, {
    datagridState: datagridState
  }))));
});

// Return a placeholder if not released and not enabled by feature flag
exports.Datagrid = Datagrid;
exports.Datagrid = Datagrid = _settings.pkg.checkComponentEnabled(Datagrid, componentName);

// The display name of the component, used by React. Note that displayName
// is used in preference to relying on function.name.
Datagrid.displayName = componentName;
Datagrid.propTypes = {
  /**
   * The data grid state, much of it being supplied by the useDatagrid hook
   */
  datagridState: _propTypes.default.object.isRequired
};