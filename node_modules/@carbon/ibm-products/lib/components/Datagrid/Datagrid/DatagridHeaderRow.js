"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _react2 = require("@carbon/react");
var _commonColumnIds = require("../common-column-ids");
var _settings = require("../../../settings");
/**
 * Copyright IBM Corp. 2020, 2022
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

// @flow

var blockClass = "".concat(_settings.pkg.prefix, "--datagrid");
var HeaderRow = function HeaderRow(datagridState, headRef, headerGroup) {
  return /*#__PURE__*/_react.default.createElement(_react2.TableRow, (0, _extends2.default)({}, headerGroup.getHeaderGroupProps({
    role: false
  }), {
    className: (0, _classnames.default)("".concat(blockClass, "__head"), headerGroup.getHeaderGroupProps().className),
    ref: headRef
  }), datagridState.headers.filter(function (_ref) {
    var isVisible = _ref.isVisible;
    return isVisible;
  }).map(function (header) {
    var _cx;
    if (header.id === _commonColumnIds.selectionColumnId) {
      // render directly without the wrapper TableHeader
      return header.render('Header', {
        key: header.id
      });
    }
    return /*#__PURE__*/_react.default.createElement(_react2.TableHeader, (0, _extends2.default)({}, header.getHeaderProps({
      role: false
    }), {
      className: (0, _classnames.default)((_cx = {}, (0, _defineProperty2.default)(_cx, "".concat(blockClass, "__resizableColumn"), header.getResizerProps), (0, _defineProperty2.default)(_cx, "".concat(blockClass, "__isResizing"), header.isResizing), (0, _defineProperty2.default)(_cx, "".concat(blockClass, "__sortableColumn"), header.canSort), (0, _defineProperty2.default)(_cx, "".concat(blockClass, "__isSorted"), header.isSorted), _cx), header.getHeaderProps().className),
      key: header.id
    }), header.render('Header'), header.getResizerProps && /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({}, header.getResizerProps(), {
      className: "".concat(blockClass, "__resizer")
    })));
  }));
};
var useHeaderRow = function useHeaderRow(hooks) {
  var useInstance = function useInstance(instance) {
    Object.assign(instance, {
      HeaderRow: HeaderRow
    });
  };
  hooks.useInstance.push(useInstance);
};
var _default = useHeaderRow;
exports.default = _default;