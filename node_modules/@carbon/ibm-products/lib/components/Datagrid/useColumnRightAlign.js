"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _settings = require("../../settings");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; } /*
icensed Materials - Property of IBM

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * (c) Copyright IBM Corp. 2020
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * US Government Users Restricted Rights - Use, duplication or disclosure
restricted by GSA ADP Schedule Contract with IBM Corp.

var blockClass = "".concat(_settings.pkg.prefix, "--datagrid");
var useColumnRightAlign = function useColumnRightAlign(hooks) {
  var RightAlignRenderer = function RightAlignRenderer(tableProps, column) {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)("".concat(blockClass, "__right-align-cell-renderer"), {
        sortDisabled: !tableProps.isTableSortable || tableProps.column.disableSortBy === true
      })
    }, column.Cell(tableProps));
  };
  var RightAlignHeader = function RightAlignHeader(headerProp, column) {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "".concat(blockClass, "__right-align-header")
    }, typeof column.Header === 'function' ? column.Header(headerProp) : column.Header);
  };
  var rightAlignedColumns = function rightAlignedColumns(columns) {
    var columnsWithDefaultCells = columns.map(function (column) {
      return _objectSpread(_objectSpread({}, column), {}, {
        Cell: column.rightAlignedColumn ? function (tableProp) {
          return RightAlignRenderer(tableProp, column);
        } : column.Cell,
        Header: column.rightAlignedColumn ? function (headerProp) {
          return RightAlignHeader(headerProp, column);
        } : column.Header
      });
    });
    return (0, _toConsumableArray2.default)(columnsWithDefaultCells);
  };
  hooks.visibleColumns.push(rightAlignedColumns);
};
var _default = useColumnRightAlign;
exports.default = _default;