"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _settings = require("../../settings");
var _DatagridExpandedRow = _interopRequireDefault(require("./Datagrid/DatagridExpandedRow"));
var _useRowExpander = _interopRequireDefault(require("./useRowExpander"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; } /**
opyright IBM Corp. 2020, 2023
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * This source code is licensed under the Apache-2.0 license found in the
file in the root directory of this source tree.

var useExpandedRow = function useExpandedRow(hooks) {
  (0, _react.useEffect)(function () {
    _settings.pkg.checkReportFeatureEnabled('Datagrid.useExpandedRow');
  }, []);
  (0, _useRowExpander.default)(hooks);
  var useInstance = function useInstance(instance) {
    var rows = instance.rows,
      expandedContentHeight = instance.expandedContentHeight,
      ExpandedRowContentComponent = instance.ExpandedRowContentComponent;
    var _useState = (0, _react.useState)({}),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      expandedRowsHeight = _useState2[0],
      setExpandedRowsHeight = _useState2[1];
    var setExpandedRowHeight = function setExpandedRowHeight(rowIndex, height) {
      return setExpandedRowsHeight(_objectSpread(_objectSpread({}, expandedRowsHeight), {}, (0, _defineProperty2.default)({}, rowIndex, height)));
    };
    var rowsWithExpand = rows.map(function (row) {
      return _objectSpread(_objectSpread({}, row), {}, {
        canExpand: row.original && !row.original.notExpandable,
        expandedContentHeight: expandedRowsHeight[row.index] || expandedContentHeight,
        RowRenderer: (0, _DatagridExpandedRow.default)(row.RowRenderer, ExpandedRowContentComponent)
      });
    });
    Object.assign(instance, {
      rows: rowsWithExpand,
      setExpandedRowHeight: setExpandedRowHeight
    });
  };
  hooks.useInstance.push(useInstance);
};
var _default = useExpandedRow;
exports.default = _default;