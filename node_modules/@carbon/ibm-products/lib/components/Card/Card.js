"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Card = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireWildcard(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _react2 = require("@carbon/react");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _CardHeader = require("./CardHeader");
var _CardFooter = require("./CardFooter");
var _settings = require("../../settings");
var _excluded = ["actionIcons", "actionsPlacement", "children", "className", "clickZone", "description", "label", "media", "mediaPosition", "onClick", "onKeyDown", "onPrimaryButtonClick", "overflowActions", "overflowAriaLabel", "onSecondaryButtonClick", "pictogram", "primaryButtonHref", "primaryButtonIcon", "primaryButtonKind", "primaryButtonPlacement", "primaryButtonText", "productive", "secondaryButtonHref", "secondaryButtonIcon", "secondaryButtonKind", "secondaryButtonText", "title", "titleSize"],
  _excluded2 = ["id"],
  _excluded3 = ["id", "icon", "onClick", "iconDescription", "href"]; //
// Copyright IBM Corp. 2020, 2023
//
// This source code is licensed under the Apache-2.0 license found in the
// LICENSE file in the root directory of this source tree.
//
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var componentName = 'Card';

// Default values for props
var defaults = {
  actionIcons: Object.freeze([]),
  actionsPlacement: 'bottom',
  clickZone: 'one',
  mediaPosition: 'top',
  overflowActions: Object.freeze([]),
  primaryButtonKind: 'primary',
  primaryButtonPlacement: 'bottom',
  productive: false,
  secondaryButtonKind: 'secondary',
  titleSize: 'default'
};
var Card = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
  var _ref$actionIcons = _ref.actionIcons,
    actionIcons = _ref$actionIcons === void 0 ? defaults.actionIcons : _ref$actionIcons,
    _ref$actionsPlacement = _ref.actionsPlacement,
    actionsPlacement = _ref$actionsPlacement === void 0 ? defaults.actionsPlacement : _ref$actionsPlacement,
    children = _ref.children,
    className = _ref.className,
    _ref$clickZone = _ref.clickZone,
    clickZone = _ref$clickZone === void 0 ? defaults.clickZone : _ref$clickZone,
    description = _ref.description,
    label = _ref.label,
    media = _ref.media,
    _ref$mediaPosition = _ref.mediaPosition,
    mediaPosition = _ref$mediaPosition === void 0 ? defaults.mediaPosition : _ref$mediaPosition,
    onClick = _ref.onClick,
    onKeyDown = _ref.onKeyDown,
    onPrimaryButtonClick = _ref.onPrimaryButtonClick,
    _ref$overflowActions = _ref.overflowActions,
    overflowActions = _ref$overflowActions === void 0 ? defaults.overflowActions : _ref$overflowActions,
    overflowAriaLabel = _ref.overflowAriaLabel,
    onSecondaryButtonClick = _ref.onSecondaryButtonClick,
    Pictogram = _ref.pictogram,
    primaryButtonHref = _ref.primaryButtonHref,
    primaryButtonIcon = _ref.primaryButtonIcon,
    _ref$primaryButtonKin = _ref.primaryButtonKind,
    primaryButtonKind = _ref$primaryButtonKin === void 0 ? defaults.primaryButtonKind : _ref$primaryButtonKin,
    _ref$primaryButtonPla = _ref.primaryButtonPlacement,
    primaryButtonPlacement = _ref$primaryButtonPla === void 0 ? defaults.primaryButtonPlacement : _ref$primaryButtonPla,
    primaryButtonText = _ref.primaryButtonText,
    _ref$productive = _ref.productive,
    productive = _ref$productive === void 0 ? defaults.productive : _ref$productive,
    secondaryButtonHref = _ref.secondaryButtonHref,
    secondaryButtonIcon = _ref.secondaryButtonIcon,
    _ref$secondaryButtonK = _ref.secondaryButtonKind,
    secondaryButtonKind = _ref$secondaryButtonK === void 0 ? defaults.secondaryButtonKind : _ref$secondaryButtonK,
    secondaryButtonText = _ref.secondaryButtonText,
    title = _ref.title,
    _ref$titleSize = _ref.titleSize,
    titleSize = _ref$titleSize === void 0 ? defaults.titleSize : _ref$titleSize,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var blockClass = "".concat(_settings.pkg.prefix, "--card");
  var hasActions = actionIcons.length > 0 || overflowActions.length > 0 || !!primaryButtonText && primaryButtonPlacement === 'top';
  var hasFooterActions = hasActions && actionsPlacement === 'bottom';
  var hasFooterButton = !!secondaryButtonText || !!primaryButtonText && primaryButtonPlacement === 'bottom';
  var hasBottomBar = hasFooterActions || hasFooterButton;
  var hasClickEvent = !!onClick || !!onKeyDown;
  var clickableProps = {
    onClick: onClick,
    onKeyDown: onKeyDown,
    role: 'button',
    tabIndex: '0'
  };

  // actions can either be an overflow menu or series of icons
  var getActions = function getActions() {
    if (overflowActions.length > 0) {
      var pos = actionsPlacement === 'top' ? 'bottom' : 'top';
      var size = actionsPlacement === 'top' ? 'sm' : 'md';
      return /*#__PURE__*/_react.default.createElement(_react2.Layer, {
        level: 2
      }, /*#__PURE__*/_react.default.createElement(_react2.OverflowMenu, {
        size: size,
        direction: pos,
        flipped: true,
        "aria-label": overflowAriaLabel
      }, overflowActions.map(function (_ref2) {
        var id = _ref2.id,
          rest = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);
        return /*#__PURE__*/_react.default.createElement(_react2.OverflowMenuItem, (0, _extends2.default)({
          key: id
        }, rest));
      })));
    }
    var icons = actionIcons.map(function (_ref3) {
      var id = _ref3.id,
        Icon = _ref3.icon,
        onClick = _ref3.onClick,
        iconDescription = _ref3.iconDescription,
        href = _ref3.href,
        rest = (0, _objectWithoutProperties2.default)(_ref3, _excluded3);
      if (productive) {
        return /*#__PURE__*/_react.default.createElement(_react2.Button, (0, _extends2.default)({}, rest, {
          key: id,
          renderIcon: Icon,
          hasIconOnly: true,
          onClick: onClick,
          size: actionsPlacement === 'top' ? 'sm' : 'md',
          iconDescription: iconDescription,
          kind: "ghost",
          href: href
        }));
      }
      if (href) {
        return /*#__PURE__*/_react.default.createElement("a", {
          key: id,
          className: "".concat(blockClass, "__icon"),
          href: href,
          onClick: onClick
        }, /*#__PURE__*/_react.default.createElement(Icon, {
          "aria-label": iconDescription
        }));
      }
      return /*#__PURE__*/_react.default.createElement(_react2.IconButton, {
        key: id,
        label: iconDescription,
        className: "".concat(blockClass, "__icon"),
        onClick: onClick,
        kind: "ghost",
        size: "sm"
      }, /*#__PURE__*/_react.default.createElement(Icon, {
        "aria-label": iconDescription
      }));
    });
    return icons;
  };
  var getCardProps = function getCardProps() {
    var _cx;
    var clickable = hasClickEvent && !productive || hasClickEvent && productive && clickZone === 'one';
    var cardProps = _objectSpread(_objectSpread({}, rest), {}, {
      ref: ref,
      className: (0, _classnames.default)(blockClass, (_cx = {}, (0, _defineProperty2.default)(_cx, "".concat(blockClass, "__productive"), productive), (0, _defineProperty2.default)(_cx, "".concat(blockClass, "__clickable"), clickable), (0, _defineProperty2.default)(_cx, "".concat(blockClass, "__media-left"), mediaPosition === 'left'), _cx), className)
    }, clickable && clickableProps);
    return cardProps;
  };

  // the only reason this is necessary is for click zone 2
  var getHeaderBodyProps = function getHeaderBodyProps() {
    var clickable = hasClickEvent && clickZone === 'two';
    var headerBodyProps = _objectSpread({
      className: (0, _classnames.default)("".concat(blockClass, "__header-body-container"), (0, _defineProperty2.default)({}, "".concat(blockClass, "__clickable"), clickable))
    }, clickable && clickableProps);
    return headerBodyProps;
  };
  var getHeaderProps = function getHeaderProps() {
    return {
      actions: actionsPlacement === 'top' ? getActions() : '',
      noActionIcons: actionIcons.length > 0 && actionsPlacement === 'top' ? false : true,
      actionsPlacement: actionsPlacement,
      onPrimaryButtonClick: onPrimaryButtonClick,
      primaryButtonIcon: primaryButtonIcon,
      primaryButtonPlacement: primaryButtonPlacement,
      primaryButtonText: primaryButtonText,
      description: description,
      hasActions: hasActions,
      label: label,
      title: title,
      titleSize: titleSize
    };
  };
  var getBodyProps = function getBodyProps() {
    var clickable = hasClickEvent && clickZone === 'three';
    var bodyProps = _objectSpread({
      className: (0, _classnames.default)("".concat(blockClass, "__body"), (0, _defineProperty2.default)({}, "".concat(blockClass, "__clickable"), clickable))
    }, clickable && clickableProps);
    return bodyProps;
  };
  var getFooterProps = function getFooterProps() {
    return {
      actions: actionsPlacement === 'bottom' ? getActions() : '',
      actionsPlacement: actionsPlacement,
      hasActions: hasFooterActions,
      hasButton: hasFooterButton,
      onPrimaryButtonClick: onPrimaryButtonClick,
      onSecondaryButtonClick: onSecondaryButtonClick,
      primaryButtonHref: primaryButtonHref,
      primaryButtonIcon: primaryButtonIcon,
      primaryButtonKind: primaryButtonKind,
      primaryButtonPlacement: primaryButtonPlacement,
      primaryButtonText: primaryButtonText,
      productive: productive,
      secondaryButtonHref: secondaryButtonHref,
      secondaryButtonIcon: secondaryButtonIcon,
      secondaryButtonKind: secondaryButtonKind,
      secondaryButtonText: secondaryButtonText
    };
  };
  return /*#__PURE__*/_react.default.createElement("div", getCardProps(), media && /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(blockClass, "__media")
  }, media), Pictogram && /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(blockClass, "__pictogram")
  }, /*#__PURE__*/_react.default.createElement(Pictogram, null)), /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(blockClass, "__content-container")
  }, /*#__PURE__*/_react.default.createElement("div", getHeaderBodyProps(), /*#__PURE__*/_react.default.createElement(_CardHeader.CardHeader, getHeaderProps()), /*#__PURE__*/_react.default.createElement("div", getBodyProps(), children)), hasBottomBar && /*#__PURE__*/_react.default.createElement(_CardFooter.CardFooter, getFooterProps())));
});
exports.Card = Card;
Card.propTypes = {
  actionIcons: _propTypes.default.arrayOf(_propTypes.default.shape({
    id: _propTypes.default.string,
    icon: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
    onKeyDown: _propTypes.default.func,
    onClick: _propTypes.default.func,
    iconDescription: _propTypes.default.string,
    href: _propTypes.default.string
  })),
  actionsPlacement: _propTypes.default.oneOf(['top', 'bottom']),
  children: _propTypes.default.node,
  className: _propTypes.default.string,
  clickZone: _propTypes.default.oneOf(['one', 'two', 'three']),
  description: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object, _propTypes.default.node]),
  label: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object, _propTypes.default.node]),
  media: _propTypes.default.node,
  mediaPosition: _propTypes.default.oneOf(['top', 'left']),
  onClick: _propTypes.default.func,
  onKeyDown: _propTypes.default.func,
  onPrimaryButtonClick: _propTypes.default.func,
  onSecondaryButtonClick: _propTypes.default.func,
  overflowActions: _propTypes.default.arrayOf(_propTypes.default.shape({
    id: _propTypes.default.string,
    itemText: _propTypes.default.string,
    onClick: _propTypes.default.func,
    onKeyDown: _propTypes.default.func
  })),
  overflowAriaLabel: _propTypes.default.string,
  pictogram: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
  primaryButtonHref: _propTypes.default.string,
  primaryButtonIcon: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
  primaryButtonKind: _propTypes.default.oneOf(['primary', 'ghost']),
  primaryButtonPlacement: _propTypes.default.oneOf(['top', 'bottom']),
  primaryButtonText: _propTypes.default.node,
  productive: _propTypes.default.bool,
  secondaryButtonHref: _propTypes.default.string,
  secondaryButtonIcon: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
  secondaryButtonKind: _propTypes.default.oneOf(['secondary', 'ghost']),
  secondaryButtonText: _propTypes.default.string,
  title: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object, _propTypes.default.node]),
  titleSize: _propTypes.default.oneOf(['default', 'large'])
};
Card.displayName = componentName;