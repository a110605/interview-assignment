"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AddSelectFormControl = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _icons = require("@carbon/react/icons");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _settings = require("../../settings");
var _UserProfileImage = require("../UserProfileImage");
var componentName = 'AddSelectFormControl';
var blockClass = "".concat(_settings.pkg.prefix, "--add-select__selections");
var AddSelectFormControl = function AddSelectFormControl(_ref) {
  var item = _ref.item,
    onClick = _ref.onClick,
    selected = _ref.selected,
    type = _ref.type;
  var controlProps = (0, _defineProperty2.default)({
    onClick: onClick,
    className: "".concat(blockClass, "-form-control-wrapper ").concat(blockClass, "-form-control-wrapper--").concat(type),
    size: 20
  }, "aria-labelledby", "control-label-".concat(item.id));
  var getCheckbox = function getCheckbox() {
    if (selected) {
      return /*#__PURE__*/_react.default.createElement(_icons.CheckboxCheckedFilled, controlProps);
    }
    return /*#__PURE__*/_react.default.createElement(_icons.Checkbox, controlProps);
  };
  var getRadio = function getRadio() {
    if (selected) {
      return /*#__PURE__*/_react.default.createElement(_icons.RadioButtonChecked, controlProps);
    }
    return /*#__PURE__*/_react.default.createElement(_icons.RadioButton, controlProps);
  };
  var getFormControl = function getFormControl() {
    if (!item) {
      return;
    }
    if (type === 'checkbox') {
      return getCheckbox();
    } else {
      return getRadio();
    }
  };
  var getAvatarProps = function getAvatarProps(_ref2) {
    var src = _ref2.src,
      alt = _ref2.alt,
      icon = _ref2.icon,
      backgroundColor = _ref2.backgroundColor,
      theme = _ref2.theme;
    return {
      className: "".concat(blockClass, "-cell-avatar"),
      size: 'lg',
      theme: theme,
      image: src,
      imageDescription: alt,
      icon: icon,
      backgroundColor: backgroundColor
    };
  };
  var getItemIcon = function getItemIcon(_ref3) {
    var Icon = _ref3.icon;
    return /*#__PURE__*/_react.default.createElement(Icon, null);
  };
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(blockClass, "-form-control")
  }, getFormControl(), /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(blockClass, "-form-control-label-wrapper")
  }, item.avatar && /*#__PURE__*/_react.default.createElement(_UserProfileImage.UserProfileImage, getAvatarProps(item.avatar)), item.icon && /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(blockClass, "-cell-icon")
  }, getItemIcon(item)), /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(blockClass, "-form-control-label-text")
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: "".concat(blockClass, "-cell-title"),
    id: "control-label-".concat(item.id)
  }, item.title), item.subtitle && /*#__PURE__*/_react.default.createElement("span", {
    className: "".concat(blockClass, "-cell-subtitle")
  }, item.subtitle))));
};
exports.AddSelectFormControl = AddSelectFormControl;
AddSelectFormControl.propTypes = {
  item: _propTypes.default.object,
  onClick: _propTypes.default.func,
  selected: _propTypes.default.bool,
  type: _propTypes.default.oneOf(['checkbox', 'radio'])
};
AddSelectFormControl.displayName = componentName;