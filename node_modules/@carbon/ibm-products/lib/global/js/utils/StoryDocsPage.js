"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StoryDocsPage = exports.CustomBlocks = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _blocks = require("@storybook/blocks");
var _changeCase = require("change-case");
var _storyHelper = require("./story-helper");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; } /**
opyright IBM Corp. 2023, 2023

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * This source code is licensed under the Apache-2.0 license found in the
file in the root directory of this source tree.

var CustomBlocks = function CustomBlocks(_ref) {
  var blocks = _ref.blocks;
  return blocks.map(function (block, index) {
    var source = _objectSpread({}, block === null || block === void 0 ? void 0 : block.source);
    if (source.code && !source.language) {
      source.language = 'jsx';
    }
    return /*#__PURE__*/_react.default.createElement("div", {
      key: "block-index--".concat(index)
    }, block.title && /*#__PURE__*/_react.default.createElement("h3", {
      id: (0, _changeCase.paramCase)(block.title)
    }, block.title), block.subTitle && /*#__PURE__*/_react.default.createElement("h4", null, block.subTitle), block.description && typeof block.description === 'string' ? /*#__PURE__*/_react.default.createElement(_blocks.Description, null, block.description) : block.description, block.story && /*#__PURE__*/_react.default.createElement(_blocks.Canvas, {
      of: block.story
    }), block.source && /*#__PURE__*/_react.default.createElement(_blocks.Source, source));
  });
};

/**
 * This function checks blocks against stories and then
 * - Adds title if no alternative is supplied
 * - Adds blocks for unreferenced stories if omitUnreferencedStories is false
 */
exports.CustomBlocks = CustomBlocks;
var processBlocks = function processBlocks(blocks, stories, omitUnreferencedStories) {
  var blocksWithStoryTitles = blocks ? (0, _toConsumableArray2.default)(blocks) : [];
  var restOfStories = [];
  var storyKeys = Object.keys(stories);
  storyKeys.forEach(function (sk) {
    var story = stories[sk].moduleExport;
    var storyName = stories[sk].name;
    var matchingBlock = blocksWithStoryTitles.find(function (block) {
      return block.story === story;
    });
    if (matchingBlock) {
      var _matchingBlock$title;
      matchingBlock.title = (_matchingBlock$title = matchingBlock.title) !== null && _matchingBlock$title !== void 0 ? _matchingBlock$title : storyName;
    } else if (!omitUnreferencedStories) {
      restOfStories.push({
        story: story,
        title: storyName
      });
    }
  });
  if (!omitUnreferencedStories) {
    return blocksWithStoryTitles.concat(restOfStories);
  }
  return blocksWithStoryTitles;
};

/**
 * Calling with no parameters will produce the default output.
 * Customize by providing alternative values and/or blocks defining sections
 * @param {*} param0
 * @returns
 */
var StoryDocsPage = function StoryDocsPage(_ref2) {
  var _csfFile$meta, _csfFile$meta$paramet, _processedBlocks$filt;
  var altTitle = _ref2.altTitle,
    altDescription = _ref2.altDescription,
    altGuidelinesHref = _ref2.altGuidelinesHref,
    blocks = _ref2.blocks,
    omitCodedExample = _ref2.omitCodedExample,
    omitUnreferencedStories = _ref2.omitUnreferencedStories;
  var _useOf = (0, _blocks.useOf)('meta', ['meta']),
    csfFile = _useOf.csfFile;
  var storyInfo = (0, _storyHelper.storyDocsPageInfo)(csfFile);
  var guidelinesHref = altGuidelinesHref !== null && altGuidelinesHref !== void 0 ? altGuidelinesHref : storyInfo.guidelinesHref;
  var isFullScreen = (csfFile === null || csfFile === void 0 ? void 0 : (_csfFile$meta = csfFile.meta) === null || _csfFile$meta === void 0 ? void 0 : (_csfFile$meta$paramet = _csfFile$meta.parameters) === null || _csfFile$meta$paramet === void 0 ? void 0 : _csfFile$meta$paramet.layout) === 'fullscreen' || false;
  var storyHelperClass = isFullScreen ? 'c4p--story-docs-page--fullscreen' : '';
  var processedBlocks = processBlocks(blocks, csfFile.stories, omitUnreferencedStories);
  console.log(processBlocks);
  var storyCount = (_processedBlocks$filt = processedBlocks === null || processedBlocks === void 0 ? void 0 : processedBlocks.filter(function (block) {
    return !!block.story;
  }).length) !== null && _processedBlocks$filt !== void 0 ? _processedBlocks$filt : 0;
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_blocks.Title, null, altTitle !== null && altTitle !== void 0 ? altTitle : storyInfo.title), guidelinesHref ? guidelinesHref && Array.isArray(guidelinesHref) ? guidelinesHref.map(function (_ref3, index) {
    var href = _ref3.href,
      label = _ref3.label;
    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, index > 0 && ' | ', /*#__PURE__*/_react.default.createElement(_blocks.AnchorMdx, {
      key: href,
      href: href
    }, label));
  }) : /*#__PURE__*/_react.default.createElement(_blocks.AnchorMdx, {
    href: guidelinesHref
  }, altTitle ? "".concat(altTitle, " usage guidelines") : storyInfo.guidelinesLinkLabel) : null, /*#__PURE__*/_react.default.createElement("h2", {
    style: {
      marginTop: guidelinesHref ? '16px' : ''
    }
  }, "Table of contents"), /*#__PURE__*/_react.default.createElement("ul", null, ['Overview', 'Coded examples', 'Example usage', 'Component API'].map(function (item) {
    return /*#__PURE__*/_react.default.createElement("li", {
      key: item
    }, /*#__PURE__*/_react.default.createElement(_blocks.AnchorMdx, {
      href: "#".concat((0, _changeCase.paramCase)(item))
    }, item), processedBlocks && item === 'Example usage' ? /*#__PURE__*/_react.default.createElement("ul", null, processedBlocks.map(function (block) {
      return block !== null && block !== void 0 && block.title ? /*#__PURE__*/_react.default.createElement("li", {
        key: block.title
      }, /*#__PURE__*/_react.default.createElement(_blocks.AnchorMdx, {
        href: "#".concat((0, _changeCase.paramCase)(block.title))
      }, block.title)) : null;
    })) : null);
  })), /*#__PURE__*/_react.default.createElement("h2", {
    id: "overview"
  }, "Overview"), /*#__PURE__*/_react.default.createElement(_blocks.Description, null, altDescription), !omitCodedExample && storyInfo.expectCodedExample ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("h2", {
    id: "coded-examples"
  }, "Coded examples"), /*#__PURE__*/_react.default.createElement("p", null, "Coded examples can be edited and are a great way to try out a component."), /*#__PURE__*/_react.default.createElement("ul", null, /*#__PURE__*/_react.default.createElement("li", {
    key: "codesandbox"
  }, /*#__PURE__*/_react.default.createElement(_blocks.AnchorMdx, {
    href: (0, _storyHelper.codeSandboxHref)(storyInfo.title)
  }, /*#__PURE__*/_react.default.createElement("svg", {
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg",
    style: {
      height: '16px',
      width: '16px',
      color: 'black',
      boxShadow: '0 0 0 2px white',
      marginRight: '8px',
      verticalAlign: '-2px'
    }
  }, /*#__PURE__*/_react.default.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M0 0h23.987v24H0V0Zm21.533 2.455v19.09H2.453V2.456h19.08Z",
    fill: "currentColor"
  })), "CodeSandbox")), /*#__PURE__*/_react.default.createElement("li", {
    key: "stackblitz"
  }, /*#__PURE__*/_react.default.createElement(_blocks.AnchorMdx, {
    href: (0, _storyHelper.stackblitzHref)(storyInfo.title)
  }, /*#__PURE__*/_react.default.createElement("img", {
    src: "https://c.staticblitz.com/assets/favicon_sb-861fe1b85c0dc928750c62de15fed96fc75e57ee366bd937bad17a3938917b3f.svg",
    alt: "Stackblitz logo",
    style: {
      verticalAlign: '-2px',
      marginRight: '8px'
    }
  }), "Stackblitz")))) : null, /*#__PURE__*/_react.default.createElement("h2", {
    id: "example-usage"
  }, "Example usage"), /*#__PURE__*/_react.default.createElement("div", {
    className: storyHelperClass
  }, processedBlocks ? /*#__PURE__*/_react.default.createElement(CustomBlocks, {
    blocks: processedBlocks
  }) : /*#__PURE__*/_react.default.createElement(_blocks.Stories, null)), /*#__PURE__*/_react.default.createElement("h2", {
    id: "component-api"
  }, "Component API"), storyCount > 1 && /*#__PURE__*/_react.default.createElement("p", null, "NOTE: Changing the controls below affects the default/primary example shown on the docs page."), /*#__PURE__*/_react.default.createElement(_blocks.Controls, null));
};
exports.StoryDocsPage = StoryDocsPage;
StoryDocsPage.propTypes = {
  /**
   * Uses doc block from the component where possible.
   *
   * Note: use `export default { component: ExampleComponent }` in the story if the main component is wrapped by some
   * additional code. This will allow the doc block to pass through.
   *
   * If passed as string treated as markdown.
   */
  altDescription: _propTypes.default.node,
  /**
   * location if any of guidelines on the PAL site, constructed by default
   */
  altGuidelinesHref: _propTypes.default.oneOfType(_propTypes.default.string, _propTypes.default.arrayOf(_propTypes.default.shape({
    href: _propTypes.default.string,
    label: _propTypes.default.string
  }))),
  /**
   * Uses component name by default
   */
  altTitle: _propTypes.default.string,
  /**
   * Array with content sections
   */
  blocks: _propTypes.default.arrayOf(_propTypes.default.shape({
    /**
     * Optional title story name used by default<h3>
     */
    title: _propTypes.default.string,
    /**
     * Optional subTitle a <h4>
     */
    subTitle: _propTypes.default.string,
    /**
     * Optional description, strings treated as markdown.
     */
    description: _propTypes.default.node,
    /**
     * Story imported from story file
     */
    story: _propTypes.default.func,
    /**
     * Some source code
     * default language `jsx`
     */
    source: _propTypes.default.shape({
      language: _propTypes.default.oneOf('javascript', 'css', 'jsx'),
      code: _propTypes.default.string
    })
  })),
  /**
   * Set to true if no published example exists (all components and patterns should have an example)
   */
  omitCodedExample: _propTypes.default.bool,
  /**
   * Stories unreferenced in blocks included by default
   */
  omitUnreferencedStories: _propTypes.default.bool
};