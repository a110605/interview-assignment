import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["filteredItems", "multi"];
//
// Copyright IBM Corp. 2022, 2022
//
// This source code is licensed under the Apache-2.0 license found in the
// LICENSE file in the root directory of this source tree.
//

import React from 'react';
import PropTypes from 'prop-types';
import cx from 'classnames';
import { pkg } from '../../settings';
import { AddSelectRow } from './AddSelectRow';
import useFocus from './hooks/useFocus';
var blockClass = "".concat(pkg.prefix, "--add-select__selections");
var componentName = 'AddSelectList';
export var AddSelectList = function AddSelectList(_ref) {
  var filteredItems = _ref.filteredItems,
    multi = _ref.multi,
    rest = _objectWithoutProperties(_ref, _excluded);
  var _useFocus = useFocus(filteredItems.length),
    _useFocus2 = _slicedToArray(_useFocus, 2),
    focus = _useFocus2[0],
    setFocus = _useFocus2[1];
  return /*#__PURE__*/React.createElement("div", {
    id: "add-select-focus",
    className: cx("".concat(blockClass, "-wrapper"), _defineProperty({}, "".concat(blockClass, "-wrapper-multi"), multi))
  }, /*#__PURE__*/React.createElement("div", {
    className: "".concat(blockClass)
  }, /*#__PURE__*/React.createElement("div", {
    className: "".concat(blockClass, "-body"),
    role: "treegrid",
    "aria-label": "add select tree label"
  }, filteredItems.map(function (item, index) {
    return /*#__PURE__*/React.createElement(AddSelectRow, _extends({
      key: item.id,
      index: index,
      focus: focus,
      setSize: filteredItems.length,
      item: item,
      multi: multi,
      setFocus: setFocus
    }, rest));
  }))));
};
AddSelectList.propTypes = {
  filteredItems: PropTypes.array,
  focus: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  multi: PropTypes.bool
};
AddSelectList.displayName = componentName;