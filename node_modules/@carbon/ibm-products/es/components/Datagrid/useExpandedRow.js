import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
/**
 * Copyright IBM Corp. 2020, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { useEffect, useState } from 'react';
import { pkg } from '../../settings';
import DatagridExpandedRow from './Datagrid/DatagridExpandedRow';
import useRowExpander from './useRowExpander';
var useExpandedRow = function useExpandedRow(hooks) {
  useEffect(function () {
    pkg.checkReportFeatureEnabled('Datagrid.useExpandedRow');
  }, []);
  useRowExpander(hooks);
  var useInstance = function useInstance(instance) {
    var rows = instance.rows,
      expandedContentHeight = instance.expandedContentHeight,
      ExpandedRowContentComponent = instance.ExpandedRowContentComponent;
    var _useState = useState({}),
      _useState2 = _slicedToArray(_useState, 2),
      expandedRowsHeight = _useState2[0],
      setExpandedRowsHeight = _useState2[1];
    var setExpandedRowHeight = function setExpandedRowHeight(rowIndex, height) {
      return setExpandedRowsHeight(_objectSpread(_objectSpread({}, expandedRowsHeight), {}, _defineProperty({}, rowIndex, height)));
    };
    var rowsWithExpand = rows.map(function (row) {
      return _objectSpread(_objectSpread({}, row), {}, {
        canExpand: row.original && !row.original.notExpandable,
        expandedContentHeight: expandedRowsHeight[row.index] || expandedContentHeight,
        RowRenderer: DatagridExpandedRow(row.RowRenderer, ExpandedRowContentComponent)
      });
    });
    Object.assign(instance, {
      rows: rowsWithExpand,
      setExpandedRowHeight: setExpandedRowHeight
    });
  };
  hooks.useInstance.push(useInstance);
};
export default useExpandedRow;