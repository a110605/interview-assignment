import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
/*
 * Licensed Materials - Property of IBM
 * 5724-Q36
 * (c) Copyright IBM Corp. 2020
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 */
import React from 'react';
import cx from 'classnames';
import { pkg } from '../../settings';
var blockClass = "".concat(pkg.prefix, "--datagrid");
var useColumnRightAlign = function useColumnRightAlign(hooks) {
  var RightAlignRenderer = function RightAlignRenderer(tableProps, column) {
    return /*#__PURE__*/React.createElement("div", {
      className: cx("".concat(blockClass, "__right-align-cell-renderer"), {
        sortDisabled: !tableProps.isTableSortable || tableProps.column.disableSortBy === true
      })
    }, column.Cell(tableProps));
  };
  var RightAlignHeader = function RightAlignHeader(headerProp, column) {
    return /*#__PURE__*/React.createElement("div", {
      className: "".concat(blockClass, "__right-align-header")
    }, typeof column.Header === 'function' ? column.Header(headerProp) : column.Header);
  };
  var rightAlignedColumns = function rightAlignedColumns(columns) {
    var columnsWithDefaultCells = columns.map(function (column) {
      return _objectSpread(_objectSpread({}, column), {}, {
        Cell: column.rightAlignedColumn ? function (tableProp) {
          return RightAlignRenderer(tableProp, column);
        } : column.Cell,
        Header: column.rightAlignedColumn ? function (headerProp) {
          return RightAlignHeader(headerProp, column);
        } : column.Header
      });
    });
    return _toConsumableArray(columnsWithDefaultCells);
  };
  hooks.visibleColumns.push(rightAlignedColumns);
};
export default useColumnRightAlign;