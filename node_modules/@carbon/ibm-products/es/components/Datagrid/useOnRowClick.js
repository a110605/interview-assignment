/*
 * Licensed Materials - Property of IBM
 * 5724-Q36
 * (c) Copyright IBM Corp. 2020, 2023
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 */

var useOnRowClick = function useOnRowClick(hooks) {
  var useInstance = function useInstance(rowInstance) {
    var onRowClick = rowInstance.onRowClick;
    var getRowProps = function getRowProps(props, datagridState) {
      var isFetching = datagridState.isFetching,
        row = datagridState.row,
        instance = datagridState.instance;
      var id = row.id,
        toggleRowSelected = row.toggleRowSelected;
      var onClick = function onClick(event) {
        if (!isFetching && onRowClick) {
          onRowClick(row, event);
          instance.selectedFlatRows && instance.selectedFlatRows.map(function (toggleRow) {
            return toggleRow.toggleRowSelected(false);
          });
          toggleRowSelected(id, true);
        }
      };
      var onKeyDown = function onKeyDown(event) {
        var key = event.key;
        if (key === 'Enter') {
          onClick();
        }
      };
      return [props, {
        onClick: onClick,
        onKeyDown: onKeyDown
      }, {
        tabIndex: 0,
        style: {
          cursor: 'pointer'
        }
      }];
    };
    hooks.getRowProps.push(getRowProps);
  };
  hooks.useInstance.push(useInstance);
};
export default useOnRowClick;