import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
/**
 * Copyright IBM Corp. 2020, 2022
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

// @flow
import React from 'react';
import cx from 'classnames';
import { TableHeader, TableRow } from '@carbon/react';
import { selectionColumnId } from '../common-column-ids';
import { pkg } from '../../../settings';
var blockClass = "".concat(pkg.prefix, "--datagrid");
var HeaderRow = function HeaderRow(datagridState, headRef, headerGroup) {
  return /*#__PURE__*/React.createElement(TableRow, _extends({}, headerGroup.getHeaderGroupProps({
    role: false
  }), {
    className: cx("".concat(blockClass, "__head"), headerGroup.getHeaderGroupProps().className),
    ref: headRef
  }), datagridState.headers.filter(function (_ref) {
    var isVisible = _ref.isVisible;
    return isVisible;
  }).map(function (header) {
    var _cx;
    if (header.id === selectionColumnId) {
      // render directly without the wrapper TableHeader
      return header.render('Header', {
        key: header.id
      });
    }
    return /*#__PURE__*/React.createElement(TableHeader, _extends({}, header.getHeaderProps({
      role: false
    }), {
      className: cx((_cx = {}, _defineProperty(_cx, "".concat(blockClass, "__resizableColumn"), header.getResizerProps), _defineProperty(_cx, "".concat(blockClass, "__isResizing"), header.isResizing), _defineProperty(_cx, "".concat(blockClass, "__sortableColumn"), header.canSort), _defineProperty(_cx, "".concat(blockClass, "__isSorted"), header.isSorted), _cx), header.getHeaderProps().className),
      key: header.id
    }), header.render('Header'), header.getResizerProps && /*#__PURE__*/React.createElement("div", _extends({}, header.getResizerProps(), {
      className: "".concat(blockClass, "__resizer")
    })));
  }));
};
var useHeaderRow = function useHeaderRow(hooks) {
  var useInstance = function useInstance(instance) {
    Object.assign(instance, {
      HeaderRow: HeaderRow
    });
  };
  hooks.useInstance.push(useInstance);
};
export default useHeaderRow;