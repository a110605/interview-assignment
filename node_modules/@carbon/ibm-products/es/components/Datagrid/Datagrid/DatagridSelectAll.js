import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
var _excluded = ["onChange"];
/*
 * Licensed Materials - Property of IBM
 * 5724-Q36
 * (c) Copyright IBM Corp. 2023
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 */
// @flow
import React, { useLayoutEffect, useState } from 'react';
import { TableSelectAll } from '@carbon/react';
import cx from 'classnames';
import { pkg } from '../../../settings';
var blockClass = "".concat(pkg.prefix, "--datagrid");
var SelectAll = function SelectAll(datagridState) {
  var _columns$;
  var _useState = useState(window.innerWidth),
    _useState2 = _slicedToArray(_useState, 2),
    windowSize = _useState2[0],
    setWindowSize = _useState2[1];
  useLayoutEffect(function () {
    function updateSize() {
      setWindowSize(window.innerWidth);
    }
    window.addEventListener('resize', updateSize);
    return function () {
      return window.removeEventListener('resize', updateSize);
    };
  }, []);
  var isFetching = datagridState.isFetching,
    getToggleAllRowsSelectedProps = datagridState.getToggleAllRowsSelectedProps,
    getToggleAllPageRowsSelectedProps = datagridState.getToggleAllPageRowsSelectedProps,
    tableId = datagridState.tableId,
    hideSelectAll = datagridState.hideSelectAll,
    DatagridPagination = datagridState.DatagridPagination,
    radio = datagridState.radio,
    columns = datagridState.columns,
    withStickyColumn = datagridState.withStickyColumn;
  var isFirstColumnStickyLeft = ((_columns$ = columns[0]) === null || _columns$ === void 0 ? void 0 : _columns$.sticky) === 'left' && withStickyColumn;
  if (hideSelectAll || radio) {
    return /*#__PURE__*/React.createElement("div", {
      className: cx("".concat(blockClass, "__head-hidden-select-all"), _defineProperty({}, "".concat(blockClass, "__select-all-sticky-left"), isFirstColumnStickyLeft && windowSize > 671))
    });
  }
  var getProps = DatagridPagination ? getToggleAllPageRowsSelectedProps : getToggleAllRowsSelectedProps;
  var _getProps = getProps(),
    onChange = _getProps.onChange,
    selectProps = _objectWithoutProperties(_getProps, _excluded);
  return /*#__PURE__*/React.createElement("div", {
    className: cx("".concat(blockClass, "__head-select-all"), "".concat(blockClass, "__checkbox-cell"), _defineProperty({}, "".concat(blockClass, "__checkbox-cell-sticky-left"), isFirstColumnStickyLeft && windowSize > 671))
  }, /*#__PURE__*/React.createElement(TableSelectAll, _extends({}, selectProps, {
    name: "".concat(tableId, "-select-all-checkbox-name"),
    onSelect: onChange,
    disabled: isFetching || selectProps.disabled,
    id: "".concat(tableId, "-select-all-checkbox-id")
  })));
};
export { SelectAll };