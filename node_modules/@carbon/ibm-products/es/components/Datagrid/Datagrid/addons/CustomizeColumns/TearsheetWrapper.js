import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["onSaveColumnPrefs", "isTearsheetOpen", "setIsTearsheetOpen", "labels"];
/* Copyright IBM Corp. 2022, 2022
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import * as React from 'react';
import PropTypes from 'prop-types';
import CustomizeColumnsTearsheet from './CustomizeColumnsTearsheet';
var TearsheetWrapper = function TearsheetWrapper(_ref) {
  var instance = _ref.instance;
  var _instance$customizeCo = instance.customizeColumnsProps,
    _onSaveColumnPrefs = _instance$customizeCo.onSaveColumnPrefs,
    isTearsheetOpen = _instance$customizeCo.isTearsheetOpen,
    setIsTearsheetOpen = _instance$customizeCo.setIsTearsheetOpen,
    labels = _instance$customizeCo.labels,
    rest = _objectWithoutProperties(_instance$customizeCo, _excluded);
  return /*#__PURE__*/React.createElement(CustomizeColumnsTearsheet, _extends({}, rest, labels, {
    isOpen: isTearsheetOpen,
    isTableSortable: (instance === null || instance === void 0 ? void 0 : instance.isTableSortable) || false,
    setIsTearsheetOpen: setIsTearsheetOpen,
    columnDefinitions: instance.allColumns,
    originalColumnDefinitions: instance.columns,
    onSaveColumnPrefs: function onSaveColumnPrefs(updatedColDefs) {
      var hiddenIds = updatedColDefs.filter(function (colDef) {
        return !colDef.isVisible;
      }).map(function (colDef) {
        return colDef.id;
      });
      instance.setHiddenColumns(hiddenIds);
      if (typeof instance.setColumnOrder === 'function') {
        instance.setColumnOrder(updatedColDefs.map(function (colDef) {
          return colDef.id;
        }));
      } else {
        // eslint-disable-next-line no-console
        console.warn("Column order can not be updated. Did you forget to add 'useColumnOrder' in 'useDatagrid'");
      }
      if (typeof _onSaveColumnPrefs === 'function') {
        _onSaveColumnPrefs(updatedColDefs);
      }
    }
  }));
};
TearsheetWrapper.propTypes = {
  instance: PropTypes.object.isRequired
};
export default TearsheetWrapper;