import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["onClick", "setIsTearsheetOpen", "isTearsheetOpen", "iconTooltipLabel"];
/**
 * Copyright IBM Corp. 2022, 2022
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import * as React from 'react';
import PropTypes from 'prop-types';
import { Column } from '@carbon/react/icons';
import { Button } from '@carbon/react';
import { pkg } from '../../../../../settings';
var blockClass = "".concat(pkg.prefix, "--datagrid");
var ButtonWrapper = function ButtonWrapper(_ref) {
  var _onClick = _ref.onClick,
    setIsTearsheetOpen = _ref.setIsTearsheetOpen,
    isTearsheetOpen = _ref.isTearsheetOpen,
    _ref$iconTooltipLabel = _ref.iconTooltipLabel,
    iconTooltipLabel = _ref$iconTooltipLabel === void 0 ? 'Customize columns' : _ref$iconTooltipLabel,
    rest = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement(Button, _extends({}, rest, {
    renderIcon: function renderIcon(props) {
      return /*#__PURE__*/React.createElement(Column, _extends({
        size: 16
      }, props));
    },
    iconDescription: iconTooltipLabel,
    tooltipPosition: "left",
    kind: "ghost",
    hasIconOnly: true,
    "test-id": "".concat(blockClass, "__customize-columns-trigger"),
    onClick: function onClick() {
      setIsTearsheetOpen(!isTearsheetOpen);
      if (typeof _onClick === 'function') {
        _onClick();
      }
    }
  }));
};
ButtonWrapper.defaultProps = {
  onClick: function onClick() {}
};
ButtonWrapper.propTypes = {
  iconTooltipLabel: PropTypes.string,
  isTearsheetOpen: PropTypes.bool.isRequired,
  onClick: PropTypes.func.isRequired,
  setIsTearsheetOpen: PropTypes.func.isRequired
};
export default ButtonWrapper;