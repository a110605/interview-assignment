/*
 * Licensed Materials - Property of IBM
 * 5724-Q36
 * (c) Copyright IBM Corp. 2021
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 */
import { useEffect } from 'react';
import cx from 'classnames';
import { pkg } from '../../settings';
var blockClass = "".concat(pkg.prefix, "--datagrid");
var useFloatingScroll = function useFloatingScroll(hooks) {
  var useInstance = function useInstance(instance) {
    var tableId = instance.tableId,
      withVirtualScroll = instance.withVirtualScroll,
      ExpandedRowContentComponent = instance.ExpandedRowContentComponent;
    useEffect(function () {
      // Floating scroll doesn't work with expanded rows and virtual scroll
      if (withVirtualScroll || ExpandedRowContentComponent) {
        return;
      }
      var datagrid = document.getElementById(tableId);
      // eslint-disable-next-line no-unused-expressions
      datagrid === null || datagrid === void 0 ? void 0 : datagrid.classList.add("".concat(blockClass, "__sticky"));
    }, [ExpandedRowContentComponent, tableId, withVirtualScroll]);
  };
  var useAddStickyClass = function useAddStickyClass(instance) {
    var withVirtualScroll = instance.withVirtualScroll,
      ExpandedRowContentComponent = instance.ExpandedRowContentComponent;
    // Floating scroll doesn't work with expanded rows and virtual scroll
    if (withVirtualScroll || ExpandedRowContentComponent) {
      return;
    }
    var addStickyClass = function addStickyClass(props) {
      return [props, {
        className: cx(props.className, "".concat(blockClass, "__sticky"))
      }];
    };
    hooks.getTableProps.push(addStickyClass);
    hooks.getTableBodyProps.push(addStickyClass);
    hooks.getHeaderGroupProps.push(addStickyClass);
  };
  var useAddScrollListener = function useAddScrollListener(instance) {
    var withVirtualScroll = instance.withVirtualScroll,
      ExpandedRowContentComponent = instance.ExpandedRowContentComponent,
      tableId = instance.tableId;
    // Floating scroll doesn't work with expanded rows and virtual scroll
    if (withVirtualScroll || ExpandedRowContentComponent) {
      return;
    }
    var memoHead;
    var addOnScroll = function addOnScroll(props) {
      return [props, {
        onScroll: function onScroll(e) {
          var simpleThead;
          if (memoHead) {
            simpleThead = memoHead;
          } else {
            var datagrid = document.getElementById(tableId);
            simpleThead = datagrid === null || datagrid === void 0 ? void 0 : datagrid.querySelector(".".concat(blockClass, "__table-simple thead > div"));
            memoHead = simpleThead;
          }
          if (simpleThead) {
            simpleThead.scrollLeft = e.target.scrollLeft;
          }
        }
      }];
    };
    hooks.getTableBodyProps.push(addOnScroll);
  };
  hooks.useInstance.push(useAddStickyClass);
  hooks.useInstance.push(useAddScrollListener);
  hooks.useInstance.push(useInstance);
};
export default useFloatingScroll;