import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
/*
 * Licensed Materials - Property of IBM
 * 5724-Q36
 * (c) Copyright IBM Corp. 2020
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 */
var useSkeletons = function useSkeletons(hooks) {
  var useInstance = function useInstance(instance) {
    var isFetching = instance.isFetching,
      rows = instance.rows;
    var skeletonRow = function skeletonRow(id) {
      return {
        isSkeleton: true,
        values: 'skeleton',
        id: id
      };
    };
    var rowsWithSkeletons = [].concat(_toConsumableArray(rows), [skeletonRow('skeleton-row-1'), skeletonRow('skeleton-row-2'), skeletonRow('skeleton-row-3')]);
    Object.assign(instance, {
      rows: isFetching ? rowsWithSkeletons : rows
    });
  };
  hooks.useInstance.push(useInstance);
};
export default useSkeletons;