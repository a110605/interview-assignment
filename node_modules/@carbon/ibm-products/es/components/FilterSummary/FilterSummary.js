/**
 * Copyright IBM Corp. 2022, 2022
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { Button } from '@carbon/react';
import React from 'react';
import PropTypes from 'prop-types';
import cx from 'classnames';
import { TagSet } from '../TagSet';
import { pkg } from '../../settings';
var blockClass = "".concat(pkg.prefix, "--filter-summary");
var FilterSummary = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$className = _ref.className,
    className = _ref$className === void 0 ? '' : _ref$className,
    _ref$clearFiltersText = _ref.clearFiltersText,
    clearFiltersText = _ref$clearFiltersText === void 0 ? 'Clear filters' : _ref$clearFiltersText,
    _ref$clearFilters = _ref.clearFilters,
    clearFilters = _ref$clearFilters === void 0 ? function () {} : _ref$clearFilters,
    _ref$filters = _ref.filters,
    filters = _ref$filters === void 0 ? [] : _ref$filters;
  var tagFilters = filters.map(function (_ref2) {
    var key = _ref2.key,
      value = _ref2.value;
    return {
      type: 'gray',
      label: "".concat(key, ": ").concat(value)
    };
  });
  return /*#__PURE__*/React.createElement("div", {
    ref: ref,
    className: cx([blockClass, className])
  }, /*#__PURE__*/React.createElement(TagSet, {
    allTagsModalSearchLabel: "Search all tags",
    allTagsModalSearchPlaceholderText: "Search all tags",
    allTagsModalTitle: "All tags",
    showAllTagsLabel: "View all tags",
    tags: tagFilters
  }), /*#__PURE__*/React.createElement(Button, {
    kind: "ghost",
    size: "sm",
    onClick: clearFilters
  }, clearFiltersText));
});
var componentName = 'FilterSummary';
FilterSummary.displayName = componentName;
FilterSummary.propTypes = {
  className: PropTypes.string,
  clearFilters: PropTypes.func.isRequired,
  clearFiltersText: PropTypes.string,
  filters: PropTypes.arrayOf(PropTypes.object).isRequired
};
export default FilterSummary;